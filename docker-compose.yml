services:

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"   # Expose HTTP
      - "443:443" # Expose HTTPS (optional for SSL)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot:ro  # For Let's Encrypt
      - ./certbot/conf:/etc/letsencrypt  # SSL certs
    depends_on:
      - site
    networks:
      - app_network

      
  postgres-db:
    image: postgres:15  # ✅ Use official PostgreSQL image
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db-sbsnext
    ports:
      - "5432:5432"  # ✅ Expose for local development
    volumes:
      - ./localdb/postgress_data:/var/lib/postgresql/data  # ✅ Persistent storage (usable in prod & local)
    healthcheck:  # ✅ Ensure DB is ready before dependent services start
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  site:
    image: ghcr.io/acostmig/sbsnext/site:latest  # ✅ Use pre-built image
    container_name: sbsnext_site
    depends_on:
      postgres-db:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - POSTGRES_URL=postgresql://postgres:password@postgres-db:5432/db-sbsnext
    restart: unless-stopped
    volumes:
       - ./sbsnext-site/public:/app/public:ro  # ✅ Only hot-reload public files
       - ./sbsnext-site/next.config.js:/app/next.config.js:ro  # ✅ Keep Next.js config flexible
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge